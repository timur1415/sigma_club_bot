from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ContextTypes,
)

from tools.sup_func import is_channel_subscribed

from config.states import MAIN_MENU


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tgk_keyboard = [
        [InlineKeyboardButton("–ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Ç–≥–∫", url="https://t.me/timik328")],
        [InlineKeyboardButton("—è –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="sub")],
    ]

    keyboard = [
        [InlineKeyboardButton("‚úÖ–≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª—É–±‚úÖ", callback_data="join")],
        [InlineKeyboardButton("‚ùì–∑–∞—á–µ–º —Ç–µ–±–µ –≤ –∫–ª—É–±‚ùì", callback_data="why")],
        [InlineKeyboardButton("üí¨–æ—Ç–∑—ã–≤—ãüí¨", url="https://t.me/reviews1264")],
    ]

    member = await is_channel_subscribed(context, update.effective_user.id)
    if member == True:
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=open("photo/hasbik.png", "rb"),
            reply_markup=InlineKeyboardMarkup(keyboard),
        )
        return MAIN_MENU
    else:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="‚ùå—Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —Ç–≥–∫‚ùå",
            reply_markup=InlineKeyboardMarkup((tgk_keyboard)),
        )


async def join(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("üí∏–æ–ø–ª–∞—Ç–∏—Ç—åüí∏", callback_data="pay")],
        [
            InlineKeyboardButton(
                "üìñ–ø—Ä–æ—á–∏—Ç–∞—Ç—å —É—Å–ª–æ–≤–∏—èüìñ",
                url="https://telegra.ph/Usloviya-soglasheniya-i-predostavleniya-uslug-IT-BLANKO-05-10",
            )
        ],
        [
            InlineKeyboardButton(
                "üí¨–Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—Éüí¨", url="https://t.me/romanenko_vova"
            )
        ],
        [InlineKeyboardButton("üîô–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô", callback_data="main_menu")],
    ]
    markup = InlineKeyboardMarkup(keyboard)
    await context.bot.send_photo(
        chat_id=update.effective_chat.id,
        photo=open("photo/car_hasbik.png", "rb"),
        reply_markup=markup,
    )


async def why(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("‚úÖ–≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª—É–±‚úÖ", callback_data="join")],
        [InlineKeyboardButton("üîô–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô", callback_data="main_menu")],
    ]
    markup = InlineKeyboardMarkup(keyboard)
    await context.bot.send_photo(
        chat_id=update.effective_chat.id,
        photo=open("photo/evil_hasbik.png", "rb"),
        caption="–í—Å—Ç—É–ø–∞–π –≤ –ö–ª—É–± –°–∏–≥–º–∞-–ü–∞–π—Ç–æ–Ω–∏—Å—Ç–æ–≤!\n\nüêç –¢–æ–ª—å–∫–æ —Ö–∞—Ä–¥–∫–æ—Ä: –º–µ—Ç–∞–∫–ª–∞—Å—Å—ã, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º.\nüíª –ß–∞—Ç –±–µ–∑ –Ω–æ–≤–∏—á–∫–æ–≤: –µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ —Ç–∞–∫–æ–µ GIL ‚Äî –º–∏–º–æ.\nüí∞ –°–ª–∏–≤—ã –≤–∞–∫–∞–Ω—Å–∏–π, AI-—Ä–∞–∑–±–æ—Ä—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª–∫–∞—Ö.\n\n –ø–æ–∫—É–ø–∞–π –ø–æ–¥–ø–∏—Å–∫—É –ø–æ –Ω–∞—à–µ–º—É –ø—Ä–∞–π—Å—É –∏–ª–∏ –æ—Å—Ç–∞–µ—à—å—Å—è –≤ –º–∏—Ä–µ print(Hello, world!)\n\n–í—ã–±–æ—Ä –∑–∞ —Ç–æ–±–æ–π, —Å–∏–≥–º–∞. üòè",
        reply_markup=markup,
    )
